<?xml version="1.0" encoding="UTF-8"?>
<!-- IMPORTANT: This is an internal file that has been generated
     by the Xilinx ISE software.  Any direct editing or
     changes made to this file may result in unpredictable
     behavior or data corruption.  It is strongly advised that
     users do not edit the contents of this file. -->
<messages>
<msg type="info" file="Map" num="192" delta="old" >SmartGuide automatically enables -timing. If SmartGuide is disabled, -timing should be enabled if the resulting design will be used as a guide file during a later run.
</msg>

<msg type="warning" file="Map" num="120" delta="old" >The command line option -c can not be used when running in timing mode.  The option will be ignored.
</msg>

<msg type="info" file="LIT" num="243" delta="old" >Logical network <arg fmt="%s" index="1">ualu/tmp_res_15_0_shift0001&lt;15&gt;1/LO</arg> has no load.
</msg>

<msg type="info" file="MapLib" num="562" delta="old" >No environment variables are currently set.
</msg>

<msg type="info" file="MapLib" num="980" delta="old" >The following NGM file is used during SmartGuide: &quot;<arg fmt="%s" index="1">D:\ISE\ExcitedCPU\CPU_map.ngm</arg>&quot;. The NGM file contains information on how the guide file was originally mapped. It is required for the best SmartGuide results.
</msg>

<msg type="info" file="LIT" num="244" delta="old" >All of the single ended outputs in this design are using slew rate limited output drivers. The delay on speed critical single ended outputs can be dramatically reduced by designating them as fast outputs.
</msg>

<msg type="warning" file="Pack" num="2609" delta="old" >SmartGuide is more efficient (better guiding and runtime) when used with explicit timing constraints. If you want the full benefit of the SmartGuide flow, please add timing constraints to your design, then re-create your guide file.
</msg>

<msg type="info" file="Pack" num="1650" delta="old" >Map created a placed design.
</msg>

<msg type="warning" file="PhysDesignRules" num="372" delta="old" >Gated clock. Clock net <arg fmt="%s" index="1">uram1/ram1_oe_not0001</arg> is sourced by a combinatorial pin. This is not good design practice. Use the CE pin to control the loading of data into the flip-flop.
</msg>

<msg type="warning" file="PhysDesignRules" num="372" delta="old" >Gated clock. Clock net <arg fmt="%s" index="1">uram1/temp_data_0_cmp_eq0000</arg> is sourced by a combinatorial pin. This is not good design practice. Use the CE pin to control the loading of data into the flip-flop.
</msg>

<msg type="warning" file="PhysDesignRules" num="372" delta="old" >Gated clock. Clock net <arg fmt="%s" index="1">uram1/port_oe_not0001</arg> is sourced by a combinatorial pin. This is not good design practice. Use the CE pin to control the loading of data into the flip-flop.
</msg>

<msg type="warning" file="PhysDesignRules" num="372" delta="old" >Gated clock. Clock net <arg fmt="%s" index="1">ucontroller/IMM_5_cmp_eq0000</arg> is sourced by a combinatorial pin. This is not good design practice. Use the CE pin to control the loading of data into the flip-flop.
</msg>

<msg type="warning" file="PhysDesignRules" num="372" delta="old" >Gated clock. Clock net <arg fmt="%s" index="1">ucomparator/Jump_and0000</arg> is sourced by a combinatorial pin. This is not good design practice. Use the CE pin to control the loading of data into the flip-flop.
</msg>

<msg type="warning" file="PhysDesignRules" num="372" delta="old" >Gated clock. Clock net <arg fmt="%s" index="1">ucontroller/IMM_11_not0001</arg> is sourced by a combinatorial pin. This is not good design practice. Use the CE pin to control the loading of data into the flip-flop.
</msg>

<msg type="warning" file="PhysDesignRules" num="372" delta="old" >Gated clock. Clock net <arg fmt="%s" index="1">ucontroller/IMM_12_cmp_eq0000</arg> is sourced by a combinatorial pin. This is not good design practice. Use the CE pin to control the loading of data into the flip-flop.
</msg>

<msg type="warning" file="PhysDesignRules" num="372" delta="old" >Gated clock. Clock net <arg fmt="%s" index="1">ucontroller/IMM_8_not0001</arg> is sourced by a combinatorial pin. This is not good design practice. Use the CE pin to control the loading of data into the flip-flop.
</msg>

</messages>

